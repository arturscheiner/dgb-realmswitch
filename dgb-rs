#!/bin/bash
# 
# Project: Digibee Realm Switch
# Version: v1.0.0
# Written by: Artur Scheiner
# Email: artur.scheiner@gmail.com

############################################################
# Constants                                                #
############################################################
CONFIG_FILE=~/.digibeectl/config.json
DGB_RS_DIR=~/.dgb-rs

############################################################
# Init                                                     #
############################################################ 
mkdir -p $DGB_RS_DIR
chmod 444 $DGB_RS_DIR/*

############################################################
# Functions                                                #
############################################################
Help()
{
   echo "Help Information"
   echo 
   echo "Syntax: $0 [-s|a|i|h]"
   echo
   echo "options:"
   echo "s     Switch realm --> $0 -s realm-name"
   echo "a     Add a new realm to the switch list"
   echo "i     Install this script on /usr/local/bin"
   echo "h     Print this Help."
}

Set()
{
    echo "Set realm based on switch list"
    echo
    LIST=$(ls $DGB_RS_DIR)
    REALM=$1
    if [[ ${LIST[*]} =~ (^|[[:space:]])"$REALM"($|[[:space:]]) ]]; then
       echo "The realm $REALM is available. Switching..."
       echo 
       ln -sf $DGB_RS_DIR/$REALM $CONFIG_FILE
       digibeectl get config
    else
       echo "Could not switch to the realm $REALM."
       echo "Check-out the available realms to switch to:"
       echo
       ListRealms
    fi
}

Deploy()
{
    echo "Deploy this script to a directory"
    echo "Sugested path is /usr/local/bin"

    echo $0
    TO_PATH=$1

    chmod +x $0

    if [ -f $TO_PATH/dgb-rs ]; then
        sudo rm $TO_PATH/dgb-rs
    fi

    sudo cp $0 $TO_PATH
}

Add()
{
    echo "Add a new realm to the switch list"
    echo
    
    if [ -f "$CONFIG_FILE" ] && [ ! -h "$CONFIG_FILE" ]; then

       REALM=$(digibeectl get config | grep realm | awk '{print $2}')

       echo "Digibeectl is configured to:"
       digibeectl get config
       echo 
       echo "Adding realm $REALM to the available list"
       cp $CONFIG_FILE $DGB_RS_DIR/$REALM
       chmod 444 $DGB_RS_DIR/$REALM
       rm $CONFIG_FILE
       Switch $REALM
    else
       FILE=$1
       SKEY=$2
       AKEY=$3

       echo $FILE $SKEY $AKEY

       echo "Digibeectl is not configured"
       echo 'digibeectl set config \
            --file path/file.json \
            --secret-key "encryption-key" \
            --auth-key "encryption-passphrase"'
       echo
       #digibeectl set config \
        #    --file $FILE \
        #    --secret-key "$SKEY" \
        #    --auth-key "$AKEY"
       digibeectl get config
    fi
}

Unset()
{
    rm $CONFIG_FILE
}

List()
{
    echo "List configured realms"
    echo
    echo "The realms listed bellow are already configured:"
    echo 
    ListRealms
    echo
}

ListRealms()
{
    ACTIVE_REALM=$(digibeectl get config | grep realm | awk '{print $2}')

    for c in $(ls $DGB_RS_DIR); do
        [[ $c == $ACTIVE_REALM ]] && echo "  $(TT bold; TT green)- $c$(TT normal)" || echo "  - $c"       
    done
}

Remove()
{
    echo "Remove realm from list"
    echo
    REALM=$1

    if [[ -f $DGB_RS_DIR/$REALM ]]; then
        chmod +rw $DGB_RS_DIR/$REALM
        rm $DGB_RS_DIR/$REALM
        echo "Realm $REALM was removed successfully!"
        echo
    else
        echo "The realm $REALM is not configured"
    fi
        echo
        echo "Check the remaining realms configured:"
        echo
        ListRealms
}

TT()
{
    FORMAT=$1

    case $FORMAT in
        bold)
            tput bold
            ;;
        underline)
            tput smul
            ;;
        standout)
            tput smso
            ;;
        normal)
            tput sgr0
            ;;
        red)
            tput setaf 1
            ;;
        green)
            tput setaf 2
            ;;
        yellow)
            tput setaf 3
            ;;
        blue)
            tput setaf 4
            ;;
        magenta)
            tput setaf 5
            ;;
        cyan)
            tput setaf 6
            ;;
        white)
            tput setaf 7
            ;;
        *)
            tput sgr0
            ;;
    esac
}

############################################################
# Main program                                             #
############################################################

############################################################
# Process the input options.                               #
############################################################
# Get the options
echo "$(TT magenta)Digibeectl$(TT white) Realm Switch v1.0.0"

#params="$(getopt -o "hlaus:r:d:" -l diff:,help --name "$cmdname" -- "$@")"

#if [ $? -ne 0 ]
#then
#    usage
#fi

#eval set -- "$params"
#unset params

#option=$1

while getopts "hlaus:r:d:" option; do
#while true
#do
   case $option in
      a) # config
         Add
         exit;;
      h) # display Help
         Help
         exit;;
      s) # set active realm
         Set $OPTARG
         exit;;
      d) # deploy script to the /usr/local/bin
         [[ ! -z $OPTARG ]] && echo "noarg" || echo "args"
         Deploy $OPTARG
         exit;;
      l) # list script
         List
         exit;;
      r) # list script
         Remove $OPTARG
         exit;;
      u) # unset active realm
         Unset
         exit;;
     \?) # Invalid option
         echo 
         echo "Error: Invalid option"
         echo
         exit;;
   esac
done

echo "$@"
echo "Hello $Name!"

